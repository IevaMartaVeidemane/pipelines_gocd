---
format_version: 10
common:
    deploy-task: &deploy-tasks
        - exec:
            command: bash
            arguments: 
                - -c 
                - echo "Delpoyment on ${ENV_NAME} environment triggered..."
    test-task: &test-tasks
        - exec:
            command: bash
            arguments: 
                - -c 
                - echo "Running tests on ${ENV_NAME} environment"
        - exec:
            command: bash
            arguments:
                - -c 
                - docker run --network=host -d -t --name api_test_executor_${ENV_NAME} api_test_executor
        - exec:
            command: bash
            arguments:
                - -c 
                - docker exec api_test_executor_${ENV_NAME} cucumber --tags=@${ENV_NAME} --format html --out test-output/report.html
        - exec:
            command: bash
            arguments:
                - -c 
                - docker cp api_test_executor_${ENV_NAME}:/usr/src/api-tests/test-output/report.html report_${ENV_NAME}.html
        - exec:
            command: bash
            arguments:
                - -c 
                - docker rm -f api_test_executor_${ENV_NAME}
pipelines:
    node_microservice:
        group: microservices
        materials:
            mainGit:
                git: https://github.com/IevaMartaVeidemane/ci_course
                branch: main
        stages:
            - build:
                jobs:
                    build:
                        tasks:
                            - exec:
                                command: bash
                                arguments: 
                                    - -c 
                                    - echo "Building node applications"
            - deploy-dev:
                environment_variables:
                    ENV_NAME: "DEV"
                jobs:
                    deploy:
                        tasks: *deploy-tasks
            - test-dev:
                environment_variables:
                    ENV_NAME: "DEV"
                jobs:
                    test:
                        tasks: *test-tasks
            - deploy-int:
                environment_variables:
                    ENV_NAME: "INT"
                jobs:
                    deploy:
                        tasks: *deploy-tasks
            - test-int:
                environment_variables:
                    ENV_NAME: "INT"
                jobs:
                    test:
                        tasks: *test-tasks
            - deploy-prod:
                environment_variables:
                    ENV_NAME: "PROD"
                jobs:
                    deploy:
                        tasks: *deploy-tasks
            - test-prod:
                environment_variables:
                    ENV_NAME: "PROD"
                jobs:
                    test:
                        tasks: *test-tasks